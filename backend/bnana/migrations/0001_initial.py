# Generated by Django 2.2.3 on 2019-07-15 21:15

import bnana.utils.validators
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Estabelecimento',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('rua', models.CharField(max_length=250)),
                ('numero', models.CharField(max_length=20)),
                ('complemento', models.CharField(max_length=100)),
                ('bairro', models.CharField(max_length=100)),
                ('cep', models.CharField(max_length=8)),
                ('cidade', models.CharField(max_length=100)),
                ('uf', models.CharField(max_length=100)),
                ('responsavel', models.CharField(max_length=100)),
                ('telefone', models.CharField(blank=True, max_length=17, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('locacao', models.BooleanField(default=False)),
                ('percentual', models.BooleanField(default=False)),
                ('compraevenda', models.BooleanField(default=False)),
                ('habilitado', models.BooleanField(default=False)),
                ('logotipo_base64', models.TextField()),
                ('logotipo_img', models.ImageField(upload_to='')),
            ],
        ),
        migrations.CreateModel(
            name='MaquinaTipo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=20)),
                ('descricao', models.TextField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='Orientador',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('whatsapp', models.CharField(blank=True, max_length=17, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('telefone', models.CharField(blank=True, max_length=17, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('cargo', models.CharField(max_length=100)),
                ('email1', models.CharField(max_length=100, validators=[django.core.validators.EmailValidator()])),
                ('email2', models.CharField(max_length=100)),
                ('rg', models.CharField(max_length=20)),
                ('rg_uf', models.CharField(max_length=2)),
                ('rg_emissor', models.CharField(max_length=20)),
                ('cpf', models.CharField(max_length=11, unique=True, validators=[bnana.utils.validators.validate_cpf])),
                ('banco', models.CharField(max_length=100)),
                ('agencia', models.CharField(max_length=20)),
                ('conta', models.CharField(max_length=20)),
                ('conta_titular', models.CharField(max_length=100)),
                ('cnpj', models.CharField(max_length=14, validators=[bnana.utils.validators.validate_cnpj])),
            ],
        ),
        migrations.CreateModel(
            name='Pessoa',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('data_nasc', models.DateField()),
                ('email', models.CharField(max_length=100, validators=[django.core.validators.EmailValidator()])),
                ('genero', models.CharField(choices=[('M', 'Masculino'), ('F', 'Feminino')], default='M', max_length=20)),
                ('cpf', models.CharField(max_length=11, unique=True, validators=[bnana.utils.validators.validate_cpf])),
                ('whatsapp', models.CharField(blank=True, max_length=17, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('raca', models.CharField(choices=[('B', 'Branca'), ('N', 'Negra'), ('P', 'Parda'), ('I', 'Indigena'), ('A', 'Amarela')], default='B', max_length=20)),
                ('anamnese_json', models.TextField(blank=True)),
                ('foto_base64', models.TextField(blank=True)),
                ('foto_img', models.ImageField(blank=True, upload_to='')),
                ('altura', models.DecimalField(decimal_places=2, default=0.0, max_digits=3)),
            ],
        ),
        migrations.CreateModel(
            name='Maquina',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('habilitado', models.BooleanField(default=True)),
                ('examesrealizados', models.IntegerField(default=0)),
                ('estabelecimento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bnana.Estabelecimento')),
                ('tipo', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='bnana.MaquinaTipo')),
            ],
        ),
        migrations.CreateModel(
            name='Exame',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exame', models.TextField()),
                ('data', models.DateTimeField()),
                ('estabelecimento', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='bnana.Estabelecimento')),
                ('maquina', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='bnana.Maquina')),
                ('orientador', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='bnana.Orientador')),
                ('pessoa', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='bnana.Pessoa')),
            ],
        ),
        migrations.CreateModel(
            name='BananasUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('bio', models.TextField(blank=True, max_length=500)),
                ('location', models.CharField(blank=True, max_length=30)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
